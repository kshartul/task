name: Deploy to ECR

on:
  #workflow_dispatch  
  push:
    branches: [ main ]
   
env:
  TF_LOG: INFO
  TERRAFORM_VERSION: '1.7.5'
  WORKING_DIRECTORY: eks
  ENVIRONMENT: dev
  ECR_REPOSITORY: test01-ecr-eks
  EKS_CLUSTER_NAME: eks-test01-cl
  AWS_REGION: us-east-1
  S3_BUCKET_NAME: eksstatebucket01 
  DYNAMODB_TABLE: S3_BUCKET_NAME-Dyno01
  
jobs:
  build:     
    name: Deployment
    runs-on: ubuntu-latest
    steps:
    - name: Set short git commit SHA
      id: commit
      uses: prompt/actions-commit-hash@v2

    - name: Check out code
      uses: actions/checkout@v2
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{env.AWS_REGION}}

   # - name: Create to S3-bucket - terraform backend
   #   run: |      
   #       aws s3api create-bucket --bucket $S3_BUCKET_NAME --region $AWS_REGION  #--create-bucket-configuration LocationConstraint=$Region
   #       aws s3api put-bucket-versioning --bucket $S3_BUCKET_NAME --versioning-configuration Status=Enabled --region $AWS_REGION
              
   # - name: Create DynamoDB Table 
   #   run: | 
   #       aws dynamodb create-table --region $AWS_REGION \
   #         --table-name $DYNAMODB_TABLE \
   #         --attribute-definitions AttributeName=LockID,AttributeType=S \
   #         --key-schema AttributeName=LockID,KeyType=HASH \
   #         --billing-mode PAY_PER_REQUEST 
    - name: Terraform install
      id: 'install-terraform'
      uses: hashicorp/setup-terraform@v2
      with: 
        terraform_version: '${{ env.TERRAFORM_VERSION }}'  
    - name: Validate terraform version
      id: validate-tf-version
      run: terraform version
      shell: bash

    - name: Run terraform init
      id: init
      run: |           
            terraform init \
            -backend-config=bucket="$S3_BUCKET_NAME" \
            -backend-config=region='${{ env.AWS_REGION }}' \
            -backend-config=key='state' \
            -backend-config=dynamodb_table="$DYNAMODB_TABLE"
      shell: bash
      working-directory: '${{ env.WORKING_DIRECTORY }}'
    - name: Run terraform validate
      id: 'tf-validate'
      run: terraform validate
      shell: bash
      working-directory: '${{ env.WORKING_DIRECTORY }}'
    
    - name: Run terraform plan
      id: terraform-plan
      run: | 
          terraform plan \
          -input=false \
          -var 'region=${{ env.AWS_REGION }}' \
          -var 'environment=${{ env.ENVIRONMENT }}' \
          -out ${{ github.run_id }}.tfplan
      shell: bash
      working-directory: '${{ env.WORKING_DIRECTORY }}'  
    
    - name: Publish  the plan Artifact
      uses: actions/upload-artifact@v3
      with:
          name: tf-plan
          path: '${{ github.workspace }}${{ env.WORKING_DIRECTORY }}/${{ github.run_id }}.tfplan'
        
    - name: Terraform destroy
      id: destroy
      run: terraform destroy -auto-approve 
      shell: bash
      working-directory: '${{ env.WORKING_DIRECTORY }}'  